# Use the official Go builder image as a builder stage
FROM --platform=${BUILDPLATFORM:-linux/amd64} golang:1.17-buster AS builder

ARG TARGETPLATFORM
ARG BUILDPLATFORM
ARG TARGETOS
ARG TARGETARCH

RUN apt-get update && \
    apt-get install -y curl make && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

ENV CONFIG_SUPERVISOR_VERSION 1.0.3
RUN mkdir -p /tmp/api-gateway \
    && cd /tmp/api-gateway \
    && curl -L https://github.com/adobe-apiplatform/api-gateway-config-supervisor/archive/${CONFIG_SUPERVISOR_VERSION}.tar.gz | tar -C /tmp/api-gateway -xz

RUN cd /tmp/api-gateway/api-gateway-config-supervisor-${CONFIG_SUPERVISOR_VERSION} \
    && make setup \
    && go mod init \
    && go mod vendor \
    && CGO_ENABLED=0 GOOS=${TARGETOS} GOARCH=${TARGETARCH} go build -ldflags "-s" -a -installsuffix cgo -o api-gateway-config-supervisor ./ \
    && mv /tmp/api-gateway/api-gateway-config-supervisor-${CONFIG_SUPERVISOR_VERSION}/api-gateway-config-supervisor /tmp/

ARG _prefix=/usr/local
ARG _exec_prefix=/usr/local/api-gateway
ARG _localstatedir=/var
ARG _sysconfdir=/etc
ARG _sbindir=/usr/local/sbin

ARG TEST_NGINX_VERSION=0.26
# Docker Build Arguments
ARG RESTY_VERSION="1.21.4.2"
ARG RESTY_LUAROCKS_VERSION="3.9.2"
ARG RESTY_OPENSSL_VERSION="3.1.3"
ARG RESTY_CONFIG_OPTIONS="\
                --prefix=${_exec_prefix} \
                --sbin-path=${_sbindir}/api-gateway \
                --conf-path=${_sysconfdir}/api-gateway/api-gateway.conf \
                --error-log-path=${_localstatedir}/log/api-gateway/error.log \
                --http-log-path=${_localstatedir}/log/api-gateway/access.log \
                --pid-path=${_localstatedir}/run/api-gateway.pid \
                --lock-path=${_localstatedir}/run/api-gateway.lock \
                --with-pcre-jit \
                --with-stream \
                --with-stream_ssl_module \
                --with-http_ssl_module \
                --with-http_stub_status_module \
                --with-http_realip_module \
                --with-http_addition_module \
                --with-http_sub_module \
                --with-http_dav_module \
                --with-http_geoip_module \
                --with-http_gunzip_module  \
                --with-http_gzip_static_module \
                --with-http_auth_request_module \
                --with-http_random_index_module \
                --with-http_secure_link_module \
                --with-http_degradation_module \
                --with-http_v2_module \
                --with-luajit \
                --without-http_ssi_module \
                --without-http_userid_module \
                --without-http_uwsgi_module \
                --without-http_scgi_module \
    "
ARG RESTY_CONFIG_OPTIONS_MORE=""

# These are not intended to be user-specified
ARG _RESTY_CONFIG_DEPS="--with-openssl=/tmp/openssl-${RESTY_OPENSSL_VERSION} --with-pcre"

RUN DEBIAN_FRONTEND=noninteractive apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        sudo \
        build-essential \
        ca-certificates \
        curl \
        gettext-base \
        libpcre3-dev \
        libgd-dev \
        libgeoip-dev \
        libncurses5-dev \
        libperl-dev \
        libreadline-dev \
        libxslt1-dev \
        make \
        unzip \
        git \
        zlib1g-dev \
        gcc \
        iproute2 \
        htop

RUN cd /tmp \
    && curl -fSLk https://www.openssl.org/source/openssl-${RESTY_OPENSSL_VERSION}.tar.gz -o openssl-${RESTY_OPENSSL_VERSION}.tar.gz \
    && tar xzf openssl-${RESTY_OPENSSL_VERSION}.tar.gz

RUN cd /tmp \
    && curl -fSLk https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz -o openresty-${RESTY_VERSION}.tar.gz \
    && tar xzf openresty-${RESTY_VERSION}.tar.gz \
    && cd openresty-${RESTY_VERSION} \
    && readonly NPROC=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) \
    && ./configure -j${NPROC} ${_RESTY_CONFIG_DEPS} ${RESTY_CONFIG_OPTIONS} ${RESTY_CONFIG_OPTIONS_MORE} \
    && make -j${NPROC} \
    && make -j${NPROC} install

RUN echo " ... installing luarocks..." \
    && cd /tmp \
    && curl -fSLk https://github.com/luarocks/luarocks/archive/v${RESTY_LUAROCKS_VERSION}.tar.gz -o luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \
    && tar xzf luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \
    && cd luarocks-${RESTY_LUAROCKS_VERSION} \
    && ./configure \
        --prefix=${_exec_prefix}/luajit \
        --with-lua=${_exec_prefix}/luajit \
        --lua-suffix=jit-2.1.0-beta3 \
        --with-lua-include=${_exec_prefix}/luajit/include/luajit-2.1 \
    && make build \
    && make install \
    && ln -sf /dev/stdout ${_localstatedir}/log/api-gateway/error.log \
    && ln -sf /dev/stderr ${_localstatedir}/log/api-gateway/error.log \
    && cd /tmp \
    && rm -rf luarocks-${RESTY_LUAROCKS_VERSION} luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \
    && DEBIAN_FRONTEND=noninteractive apt-get autoremove -y \
    && cp /tmp/openresty-${RESTY_VERSION}/build/install ${_exec_prefix}/bin/resty-install \
    && cd /tmp \
    && rm -rf \
        openssl-${RESTY_OPENSSL_VERSION} \
        openssl-${RESTY_OPENSSL_VERSION}.tar.gz \
        openresty-${RESTY_VERSION}.tar.gz openresty-${RESTY_VERSION} \
        rm -rf /var/lib/apt/lists/*

ARG LUA_RESTY_HTTP_VERSION=0.17.1
RUN echo " ... installing lua-resty-http..." \
    && mkdir -p /tmp/api-gateway \
    && curl -Lk https://github.com/pintsized/lua-resty-http/archive/v${LUA_RESTY_HTTP_VERSION}.tar.gz -o /tmp/api-gateway/lua-resty-http-${LUA_RESTY_HTTP_VERSION}.tar.gz \
    && tar xzf /tmp/api-gateway/lua-resty-http-${LUA_RESTY_HTTP_VERSION}.tar.gz -C /tmp/api-gateway/ \
    && cd /tmp/api-gateway/lua-resty-http-${LUA_RESTY_HTTP_VERSION} \
    && make install \
            LUA_LIB_DIR=${_exec_prefix}/lualib \
            INSTALL=${_exec_prefix}/bin/resty-install \
    && rm -rf /tmp/api-gateway

ENV LUA_RESTY_IPUTILS_VERSION 0.3.0
RUN echo " ... installing lua-resty-iputils..." \
    && mkdir -p /tmp/api-gateway \
    && curl -Lk https://github.com/hamishforbes/lua-resty-iputils/archive/v${LUA_RESTY_IPUTILS_VERSION}.tar.gz -o /tmp/api-gateway/lua-resty-iputils-${LUA_RESTY_IPUTILS_VERSION}.tar.gz \
    && tar -xf /tmp/api-gateway/lua-resty-iputils-${LUA_RESTY_IPUTILS_VERSION}.tar.gz -C /tmp/api-gateway/ \
    && cd /tmp/api-gateway/lua-resty-iputils-${LUA_RESTY_IPUTILS_VERSION} \
    && export LUA_LIB_DIR=${_exec_prefix}/lualib \
    && export INSTALL=${_exec_prefix}/bin/resty-install \
    && $INSTALL -d ${LUA_LIB_DIR}/resty \
    && $INSTALL lib/resty/*.lua ${LUA_LIB_DIR}/resty/ \
    && rm -rf /tmp/api-gateway

ENV HMAC_LUA_VERSION 1.0.0
RUN echo " ... installing api-gateway-hmac ..." \
    && mkdir -p /tmp/api-gateway \
    && curl -Lk https://github.com/adobe-apiplatform/api-gateway-hmac/archive/${HMAC_LUA_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-hmac-${HMAC_LUA_VERSION}.tar.gz \
    && tar -xf /tmp/api-gateway/api-gateway-hmac-${HMAC_LUA_VERSION}.tar.gz -C /tmp/api-gateway/ \
    && cd /tmp/api-gateway/api-gateway-hmac-${HMAC_LUA_VERSION} \
    && make install \
            LUA_LIB_DIR=${_exec_prefix}/lualib \
            INSTALL=${_exec_prefix}/bin/resty-install \
    && rm -rf /tmp/api-gateway

ENV CACHE_MANAGER_VERSION 1.0.1
RUN echo " ... installing api-gateway-cachemanager..." \
    && mkdir -p /tmp/api-gateway \
    && curl -Lk https://github.com/adobe-apiplatform/api-gateway-cachemanager/archive/${CACHE_MANAGER_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-cachemanager-${CACHE_MANAGER_VERSION}.tar.gz \
    && tar -xf /tmp/api-gateway/api-gateway-cachemanager-${CACHE_MANAGER_VERSION}.tar.gz -C /tmp/api-gateway/ \
    && cd /tmp/api-gateway/api-gateway-cachemanager-${CACHE_MANAGER_VERSION} \
    && make install \
            LUA_LIB_DIR=${_exec_prefix}/lualib \
            INSTALL=${_exec_prefix}/bin/resty-install \
    && rm -rf /var/cache/apk/* \
    && rm -rf /tmp/api-gateway

ENV AWS_VERSION 1.7.1
RUN echo " ... installing api-gateway-aws ..." \
    && mkdir -p /tmp/api-gateway \
    && curl -Lk https://github.com/adobe-apiplatform/api-gateway-aws/archive/${AWS_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-aws-${AWS_VERSION}.tar.gz \
    && tar -xf /tmp/api-gateway/api-gateway-aws-${AWS_VERSION}.tar.gz -C /tmp/api-gateway/ \
    && cd /tmp/api-gateway/api-gateway-aws-${AWS_VERSION} \
    && make install \
            LUA_LIB_DIR=${_exec_prefix}/lualib \
            INSTALL=${_exec_prefix}/bin/resty-install \
    && rm -rf /var/cache/apk/* \
    && rm -rf /tmp/api-gateway

ENV REQUEST_VALIDATION_VERSION 1.3.10
RUN echo " ... installing api-gateway-request-validation ..." \
    && mkdir -p /tmp/api-gateway \
    && curl -Lk https://github.com/adobe-apiplatform/api-gateway-request-validation/archive/api-gateway-request-validation-${REQUEST_VALIDATION_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-request-validation-${REQUEST_VALIDATION_VERSION}.tar.gz \
    && tar -xf /tmp/api-gateway/api-gateway-request-validation-${REQUEST_VALIDATION_VERSION}.tar.gz -C /tmp/api-gateway/ \
    && cd /tmp/api-gateway/api-gateway-request-validation-api-gateway-request-validation-${REQUEST_VALIDATION_VERSION} \
    && make install \
            LUA_LIB_DIR=${_exec_prefix}/lualib \
            INSTALL=${_exec_prefix}/bin/resty-install \
    && rm -rf /var/cache/apk/* \
    && rm -rf /tmp/api-gateway

ENV ASYNC_LOGGER_VERSION 1.0.1
RUN echo " ... installing api-gateway-async-logger ..." \
    && mkdir -p /tmp/api-gateway \
    && curl -Lk https://github.com/adobe-apiplatform/api-gateway-async-logger/archive/${ASYNC_LOGGER_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-async-logger-${ASYNC_LOGGER_VERSION}.tar.gz \
    && tar -xf /tmp/api-gateway/api-gateway-async-logger-${ASYNC_LOGGER_VERSION}.tar.gz -C /tmp/api-gateway/ \
    && cd /tmp/api-gateway/api-gateway-async-logger-${ASYNC_LOGGER_VERSION} \
    && make install \
            LUA_LIB_DIR=${_exec_prefix}/lualib \
            INSTALL=${_exec_prefix}/bin/resty-install \
    && rm -rf /var/cache/apk/* \
    && rm -rf /tmp/api-gateway

ENV REQUEST_TRACKING_VERSION 1.0.1
RUN echo " ... installing api-gateway-request-tracking ..." \
        && mkdir -p /tmp/api-gateway \
        && curl -Lk https://github.com/adobe-apiplatform/api-gateway-request-tracking/archive/${REQUEST_TRACKING_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-request-tracking-${REQUEST_TRACKING_VERSION}.tar.gz \
        && tar -xf /tmp/api-gateway/api-gateway-request-tracking-${REQUEST_TRACKING_VERSION}.tar.gz -C /tmp/api-gateway/ \
        && cd /tmp/api-gateway/api-gateway-request-tracking-${REQUEST_TRACKING_VERSION} \
        && make install \
             LUA_LIB_DIR=${_exec_prefix}/lualib \
             INSTALL=${_exec_prefix}/bin/resty-install \
        && rm -rf /tmp/api-gateway

ENV RCLONE_VERSION=v1.49.4
RUN  echo " ... installing rclone  ... " \
    && curl -Lk https://github.com/ncw/rclone/releases/download/${RCLONE_VERSION}/rclone-${RCLONE_VERSION}-${TARGETOS}-${TARGETARCH}.zip -o /tmp/rclone.zip \
    && unzip /tmp/rclone.zip -d /tmp/ \
    && cp /tmp/rclone-${RCLONE_VERSION}-${TARGETOS}-${TARGETARCH}/rclone ${_prefix}/bin/ \
    && rm -rf /tmp/rclone* \
    && rm -rf /var/cache/apk/*

ENV PROMETHEUS_EXPORTER_VERSION=0.11.0
RUN  echo " ... adding nginx-prometheus-exporter" \
     && mkdir -p /tmp/api-gateway \
     && cd /tmp/api-gateway/ \
     && curl -Lk https://github.com/nginxinc/nginx-prometheus-exporter/releases/download/v${PROMETHEUS_EXPORTER_VERSION}/nginx-prometheus-exporter_${PROMETHEUS_EXPORTER_VERSION}_${TARGETOS}_${TARGETARCH}.tar.gz -o /tmp/api-gateway/nginx-prometheus-exporter-${PROMETHEUS_EXPORTER_VERSION}-${TARGETOS}-${TARGETARCH}.tar.gz \
     && tar -zxf ./nginx-prometheus-exporter-${PROMETHEUS_EXPORTER_VERSION}-${TARGETOS}-${TARGETARCH}.tar.gz \
     && cp ./nginx-prometheus-exporter /etc/nginx-prometheus-exporter \
     && rm -rf /tmp/api-gateway

RUN echo " ... adding jq" \
    && curl -L -k -s -o /usr/local/bin/jq https://github.com/jqlang/jq/releases/download/jq-1.7/jq-${TARGETOS}-${TARGETARCH} \
    && chmod 755 ${_prefix}/bin/jq \
    && rm -rf /var/cache/apk/*


RUN apt-get -y remove --purge --allow-remove-essential make unzip gcc git zlib1g-dev build-essential libpcre3-dev \
    && apt-get -y autoremove


# Final image stage
FROM --platform=${TARGETPLATFORM:-linux/amd64} debian:12-slim

COPY --from=builder /tmp/api-gateway-config-supervisor /usr/local/sbin/
COPY --from=builder /usr/local/api-gateway/ /usr/local/api-gateway/
COPY --from=builder /usr/local/sbin/api-gateway /usr/local/sbin/api-gateway
COPY --from=builder /etc/api-gateway/ /etc/api-gateway/
COPY --from=builder /var/log/ /var/log/
COPY --from=builder /var/run/ /var/run/
COPY --from=builder /usr/local/bin/rclone /usr/local/bin/rclone
COPY --from=builder /etc/nginx-prometheus-exporter /etc/nginx-prometheus-exporter
COPY --from=builder /usr/local/bin/jq /usr/local/bin/jq

RUN ln -sf /dev/stdout /var/log/api-gateway/error.log \
    && ln -sf /dev/stderr /var/log/api-gateway/error.log

RUN DEBIAN_FRONTEND=noninteractive apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        sudo \
        ca-certificates \
        curl \
        gettext-base \
        libgd-dev \
        libpcre3-dev \
        libgeoip-dev \
        libncurses5-dev \
        libperl-dev \
        libreadline-dev \
        libxslt1-dev \
        gcc \
        iproute2 \
        htop

COPY init.sh /etc/init-container.sh

COPY api-gateway-config /etc/api-gateway

RUN groupadd --gid 1000 nginx-api-gateway \
    && useradd --uid 1000 --gid nginx-api-gateway --shell /bin/bash --create-home nginx-api-gateway

RUN mkdir -p /usr/local/api-gateway \
    && chown -R nginx-api-gateway /etc/api-gateway /var/log/api-gateway /usr/local \
    && chmod 755 -R /etc/api-gateway /var/log/api-gateway /usr/local \
    && echo "nginx-api-gateway ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

USER nginx-api-gateway

ENTRYPOINT ["/etc/init-container.sh"]
